{"version":3,"file":"static/js/63.6c15accd.chunk.js","mappings":"2QACA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAA0F,qBAA1F,EAAuH,qBAAvH,EAAqJ,sBAArJ,EAAqL,uBAArL,EAAsN,uBAAtN,EAAwP,wBAAxP,EAAuR,oBAAvR,EAAkT,oBAAlT,EAAkV,yBAAlV,EAAiX,mB,4BCyHjX,EApHmB,WAEf,IAAMA,GAAWC,EAAAA,EAAAA,MAqCjB,OACIC,EAAAA,EAAAA,KAAA,SAAOC,UAAWC,EAAsBC,UAC7CC,EAAAA,EAAAA,MAAA,QAAMC,SAtCa,SAACC,GACnBA,EAAMC,iBAEN,IAG4CC,EAHtCC,EAAW,IAAIC,SAASJ,EAAMK,QAC9BC,EAAU,CAAC,EAAEC,GAAAC,EAAAA,EAAAA,GAEOL,EAASM,WAAS,IAA5C,IAAAF,EAAAG,MAAAR,EAAAK,EAAAI,KAAAC,MAA8C,CAAC,IAADC,GAAAC,EAAAA,EAAAA,GAAAZ,EAAAa,MAAA,GAApCC,EAAIH,EAAA,GAAEE,EAAKF,EAAA,GACbG,KAAQV,EACJW,MAAMC,QAAQZ,EAAQU,IACtBV,EAAQU,GAAMG,KAAKJ,GAEnBT,EAAQU,GAAQ,CAACV,EAAQU,GAAOD,GAGpCT,EAAQU,GAAQD,CAExB,CAAC,OAAAK,GAAAb,EAAAc,EAAAD,EAAA,SAAAb,EAAAe,GAAA,CAED9B,GAAS+B,EAAAA,EAAAA,GAAWjB,GACxB,EAmBgCT,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAkBC,SAAA,CAAC,YAE9BH,EAAAA,EAAAA,KAAA,SACCsB,KAAK,WACLrB,UAAWC,EACC4B,YAAY,UAEzB9B,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAoB6B,MAAM,KAAKC,OAAO,KAAI7B,UAC/CH,EAAAA,EAAAA,KAAA,OAAKiC,KAAI,GAAAC,OAAKC,EAAAA,EAAK,wBAGrC/B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACgBH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAkBC,SAAC,aAClCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACLH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAoBC,SAAC,yBACpCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,QAEVF,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,UACjCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBC,SApCtC,CACjB,CAAEiC,KAAO,UAAWd,KAAM,iBAAkBD,MAAO,MACnD,CAAEe,KAAM,oBAAqBd,KAAM,eAAgBD,MAAO,aAC1D,CAAEe,KAAM,eAAgBd,KAAM,UAAWD,MAAO,WAChD,CAAEe,KAAO,UAAWd,KAAM,KAAMD,MAAO,MACvC,CAAEe,KAAM,UAAWd,KAAM,SAAUD,MAAO,cAgCJgB,KAAI,SAACC,GAAM,OAClBtC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBC,UACrCC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAsBC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAU8B,MAAM,KAAKC,OAAO,KAAI7B,UACjCH,EAAAA,EAAAA,KAAA,OAAKiC,KAAI,GAAAC,OAAKC,EAAAA,EAAK,KAAAD,OAAII,EAAOF,WAE5CpC,EAAAA,EAAAA,KAAA,SACCC,UAAU,kBACVqB,KAAMgB,EAAOhB,KACbiB,KAAK,WACLlB,MAAOiB,EAAOjB,MACCmB,GAAIF,EAAOhB,OAE1BgB,EAAOjB,WAZkCoB,EAAAA,EAAAA,MAcvC,YAMfrC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACLH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAoBC,SAAC,kBACpCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,QAEVF,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,UACjCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBC,SAxD3C,CACZ,CAAEiC,KAAM,cAAed,KAAM,OAAQD,MAAO,OAC5C,CAAEe,KAAM,cAAed,KAAM,OAAQD,MAAO,oBAC5C,CAAEe,KAAM,cAAed,KAAM,OAAQD,MAAO,WAsDXgB,KAAI,SAACC,GAAM,OACbtC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBC,UACrCC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAsBC,SAAA,EACvCH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAW8B,MAAM,KAAKC,OAAO,KAAI7B,UAClCH,EAAAA,EAAAA,KAAA,OAAKiC,KAAI,GAAAC,OAAKC,EAAAA,EAAK,KAAAD,OAAII,EAAOF,WAE5CpC,EAAAA,EAAAA,KAAA,SACCC,UAAU,kBACVqB,KAAMgB,EAAOhB,KACbiB,KAAK,QACLlB,MAAOiB,EAAOjB,MACCmB,GAAIF,EAAOjB,QAE1BiB,EAAOjB,WAZkCoB,EAAAA,EAAAA,MAcvC,YAMfzC,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAiBqC,KAAK,SAAQpC,SAAC,eAIlE,ECvHA,EAA4B,yBAA5B,EAAgE,wBAAhE,EAAkG,uBAAlG,EAAoI,wBAApI,EAAqK,sBCoDrK,EA5CgB,WAEZ,IAAML,GAAWC,EAAAA,EAAAA,MACX2C,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAUF,EAAAA,EAAAA,IAAYG,EAAAA,IACtBC,GAAQJ,EAAAA,EAAAA,IAAYK,EAAAA,IAC1BC,GAAwCC,EAAAA,EAAAA,UAAS,GAAEC,GAAA/B,EAAAA,EAAAA,GAAA6B,EAAA,GAA5CG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAGpCG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAI,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACThE,GAASiE,EAAAA,EAAAA,MAAoB,wBAAAH,EAAAI,OAAA,GAAAL,EAAA,KAChC,kBAFS,OAAAH,EAAAS,MAAA,KAAAC,UAAA,KAGVX,GACJ,GAAG,CAACzD,IAEJ,IAIMqE,EAAoBf,EAAeV,EAAS0B,OAC5CC,EAAoC,IAApB3B,EAAS0B,OAE/B,OACAhE,EAAAA,EAAAA,MAAA,WAASH,UAAWqE,EAAuBnE,SAAA,CACtC0C,IAAW7C,EAAAA,EAAAA,KAACuE,EAAAA,EAAM,IAClBxB,IAAS/C,EAAAA,EAAAA,KAAA,OAAAG,SAAK,6BACfH,EAAAA,EAAAA,KAAA,OAAAG,UACIH,EAAAA,EAAAA,KAACwE,EAAU,OAEfpE,EAAAA,EAAAA,MAAA,OAAKH,UAAWqE,EAAoBnE,SAAA,EAChCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWqE,EAAsBnE,UAClCH,EAAAA,EAAAA,KAACyE,EAAAA,EAAc,CAAClB,KAAOb,EAAUA,EAASgC,MAAM,EAAGtB,GAAe,QAEtEhD,EAAAA,EAAAA,MAAA,OAAKH,UAAWqE,EAAqBnE,SAAA,CAChCgE,IACGnE,EAAAA,EAAAA,KAAA,UAAQC,UAAWqE,EAAuBK,QApBzC,WACbtB,GAAgB,SAAAuB,GAAS,OAAIA,EAAY,CAAC,GAC9C,EAkB4EzE,SAAC,cAEhEkE,IAAiBrE,EAAAA,EAAAA,KAAA,MAAAG,SAAI,iCAKtC,C","sources":["webpack://camper/./src/components/FilterForm/style.module.css?7675","components/FilterForm/FilterForm.jsx","webpack://camper/./src/pages/Catalog/style.module.css?14a4","pages/Catalog/Catalog.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__lwmdt\",\"title\":\"style_title__ufnaz\",\"label\":\"style_label__SJMLd\",\"input\":\"style_input__SDWK6\",\"mappin\":\"style_mappin__nnTbg\",\"titleEq\":\"style_titleEq__l5xkb\",\"divider\":\"style_divider__sLfay\",\"fieldset\":\"style_fieldset__ursB8\",\"list\":\"style_list__o6qO2\",\"item\":\"style_item__zjJ6Q\",\"labelItem\":\"style_labelItem__CWxJf\",\"btn\":\"style_btn__gwsnK\"};","import { useDispatch } from 'react-redux';\nimport icons from '../../images/icons.svg'\nimport styleFilter from './style.module.css'\nimport { setFilters } from '../../redux/slices/filterSlice';\nimport { nanoid } from 'nanoid';\n\nconst FilterForm = () => {\n\n    const dispatch = useDispatch();\n\tconst handleSearch = (event) => {\n    event.preventDefault();\n\n    const formData = new FormData(event.target);\n    const filters = {};\n\n    for (let [name, value] of formData.entries()) {\n        if (name in filters) {\n            if (Array.isArray(filters[name])) {\n                filters[name].push(value);\n            } else {\n                filters[name] = [filters[name], value];\n            }\n        } else {\n            filters[name] = value;\n        }\n    }\n\n    dispatch(setFilters(filters));\n};\n\nconst equipment = [\n\t{ icon:  \"icon-ac\", name: \"airConditioner\", value: \"AC\" },\n\t{ icon: \"icon-transmission\", name: \"transmission\", value: \"Automatic\" },\n\t{ icon: \"icon-kitchen\", name: \"kitchen\", value: \"Kitchen\" },\n\t{ icon:  \"icon-tv\", name: \"TV\", value: \"TV\" },\n\t{ icon: \"icon-wc\", name: \"shower\", value: \"Shower/WC\" },\n];\n    \nconst type = [\n\t{ icon: \"icon-alcove\", name: \"form\", value: \"Van\" },\n\t{ icon: \"icon-alcove\", name: \"form\", value: \"Fully Integrated\" },\n\t{ icon: \"icon-alcove\", name: \"form\", value: \"Alcove\" },\n];\n\n   \n    return (\n        <aside className={styleFilter.container}>\n\t\t\t<form onSubmit={handleSearch}>\n\t\t\t\t<label className={styleFilter.label}>\n\t\t\t        Location\n\t\t\t        <input\n\t\t\t\t        name=\"location\"\n\t\t\t\t        className={styleFilter.input}\n                        placeholder=\"City\"\n\t\t\t        />\n\t\t\t        <svg className={styleFilter.mappin} width=\"18\" height=\"20\">\n                      <use href={`${icons}#icon-mappin`}></use>\n                    </svg>\n\t\t        </label>\n\t\t\t\t<div>\n                    <h3 className={styleFilter.title}>Filters</h3>\n                    <div>\n\t\t\t            <h4 className={styleFilter.titleEq}>\"Vehicle equipment\"</h4>\n\t\t\t            <hr className={styleFilter.divider} />\n                    </div>\n                    <div className={styleFilter.fieldset}>\n                        <ul className={styleFilter.list}>\n                            {equipment.map((filter) => (\n                                <li className={styleFilter.item} key={nanoid()}>\n\t\t\t                        <label className={styleFilter.labelItem}>\n\t\t\t                        \t<svg className=\"iconEqp\" width=\"32\" height=\"32\">\n                                          <use href={`${icons}#${filter.icon}`}></use>\n                                        </svg>\n\t\t\t                        \t<input\n\t\t\t                        \t\tclassName=\"visially-hidden\"\n\t\t\t                        \t\tname={filter.name}\n\t\t\t                        \t\ttype='checkbox'\n\t\t\t                        \t\tvalue={filter.value}\n                                            id={filter.name}\n\t\t\t                        \t/>\n\t\t\t                        \t{filter.value}\n\t\t\t                        </label>\n\t\t                        </li>\n\t\t\t\t        \n\t\t\t                ))}\n\t\t                </ul>\n\t\t\t\t    </div>\n                </div>\n                <div>\n                    <div>\n\t\t\t            <h4 className={styleFilter.titleEq}>Vehicle type</h4>\n\t\t\t            <hr className={styleFilter.divider} />\n                    </div>\n                    <div className={styleFilter.fieldset}>\n                        <ul className={styleFilter.list}>\n                            {type.map((filter) => (\n                                <li className={styleFilter.item} key={nanoid()}>\n\t\t\t                        <label className={styleFilter.labelItem}>\n\t\t\t                        \t<svg className=\"iconType\" width=\"40\" height=\"28\">\n                                          <use href={`${icons}#${filter.icon}`}></use>\n                                        </svg>\n\t\t\t                        \t<input\n\t\t\t                        \t\tclassName=\"visially-hidden\"\n\t\t\t                        \t\tname={filter.name}\n\t\t\t                        \t\ttype='radio'\n\t\t\t                        \t\tvalue={filter.value}\n                                            id={filter.value}\n\t\t\t                        \t/>\n\t\t\t                        \t{filter.value}\n\t\t\t                        </label>\n\t\t                        </li>\n\t\t\t\t        \n\t\t\t                ))}\n\t\t                </ul>\n\t\t\t\t    </div>\n                </div>\n                <button className={styleFilter.btn} type='submit'>Search</button>\n\t\t\t</form>\n\t\t</aside>\n    );\n};\n\nexport default FilterForm;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"style_container__9ZtNn\",\"loadMore\":\"style_loadMore__naTe8\",\"loadDiv\":\"style_loadDiv__glLRX\",\"listCont\":\"style_listCont__onItP\",\"divBtn\":\"style_divBtn__w4Zhk\"};","import { fetchVehicleData } from \"api/apiFetch\";\nimport CamperCardList from \"components/CamperCardsList/CamperCardsList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { filterVehicles, selectError, selectLoading } from \"../../redux/selectors/selectors\";\nimport FilterForm from \"components/FilterForm/FilterForm\";\nimport styleCatalog from './style.module.css';\n\nconst Catalog = () => {\n\n    const dispatch = useDispatch();\n    const vehicles = useSelector(filterVehicles);\n    const loading = useSelector(selectLoading);\n    const error = useSelector(selectError);\n    const [visibleCount, setVisibleCount] = useState(4);\n\n\n    useEffect(() => {\n        const data = async () => {\n            dispatch(fetchVehicleData());\n        }\n        data();\n    }, [dispatch])\n\n    const loadMore = () => {\n        setVisibleCount(prevCount => prevCount + 4)\n    };\n\n    const isLoadMoreVisible = visibleCount < vehicles.length;\n    const titleNoSearch = vehicles.length === 0\n\n    return (\n    <section className={styleCatalog.container}>\n        {loading && <Loader />}\n        {error && <div>Something went wrong...</div>}\n        <div>\n            <FilterForm />\n        </div>\n        <div className={styleCatalog.divBtn}>\n            <div className={styleCatalog.listCont}>\n                <CamperCardList data={ vehicles? vehicles.slice(0, visibleCount): []} />\n            </div>\n            <div className={styleCatalog.loadDiv}>\n                {isLoadMoreVisible && (\n                    <button className={styleCatalog.loadMore} onClick={loadMore}>Load more</button>\n                    )}\n                {titleNoSearch && <h2>No searching campers</h2>}\n            </div>    \n        </div>\n    </section>\n    )\n}\nexport default Catalog "],"names":["dispatch","useDispatch","_jsx","className","styleFilter","children","_jsxs","onSubmit","event","preventDefault","_step","formData","FormData","target","filters","_iterator","_createForOfIteratorHelper","entries","s","n","done","_step$value","_slicedToArray","value","name","Array","isArray","push","err","e","f","setFilters","placeholder","width","height","href","concat","icons","icon","map","filter","type","id","nanoid","vehicles","useSelector","filterVehicles","loading","selectLoading","error","selectError","_useState","useState","_useState2","visibleCount","setVisibleCount","useEffect","data","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","fetchVehicleData","stop","apply","arguments","isLoadMoreVisible","length","titleNoSearch","styleCatalog","Loader","FilterForm","CamperCardList","slice","onClick","prevCount"],"sourceRoot":""}